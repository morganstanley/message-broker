{"version":3,"file":"component---node-modules-morganstanley-gatsby-theme-ms-gh-pages-src-templates-documentation-js-content-file-path-content-documentation-1-0-0-message-replaying-mdx-05bc21b31feccf38c331.js","mappings":"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","sources":["webpack://@morgan-stanley/message-broker-gh-pages/./content/documentation/1.0.0/message-replaying.mdx","webpack://@morgan-stanley/message-broker-gh-pages/./node_modules/@morganstanley/gatsby-theme-ms-gh-pages/src/templates/documentation.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Replaying will allow new subscriptions to receive the latest “n” number of messages. Using the messagebroker config the user can configure how many messages they want to be cached when subscriptions are made. Configs can only be provided when the messagebroker channels are created.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> messagebroker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"@morgan-stanley/message-broker\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">messagebroker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'myCachedChannel'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> replayCacheSize<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">publish</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        payload<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'a message to all new Subscribers!'</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"It is important to note that creating a channel with the same name but with different configurations will throw an error.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/message-broker/message-broker/site/content/documentation/1.0.0/message-replaying.mdx\";\nimport React, {useCallback, useMemo, useState} from 'react';\nimport {Link, navigate, graphql} from 'gatsby';\nimport {Box} from '@mui/material';\nimport Layout from '../components/layout';\nimport PageHead from '../components/page-head';\nimport VersionSelect from '../components/version-select';\nimport {tocFragment, allDirectoryNodes} from '../fragments/documentation';\nimport {siteFragment} from '../fragments/site';\nimport {getCurrentVersion, getDocsVersion} from '../utils/version-docs';\nconst DocumentationTemplate = ({children, data, pageContext, location}) => {\n  const allDocs = data.allMdx.nodes;\n  const toc = data.mdx.tableOfContents.items;\n  const pageTitle = pageContext.frontmatter.title;\n  const slug = data.mdx.fields.slug;\n  const siteTitle = data.site?.siteMetadata?.title;\n  const versions = useMemo(() => data.allDirectory.nodes.reverse().map(node => node.base), [data.allDirectory.nodes]);\n  const [selectedVersion, setSelectedVersion] = useState(getCurrentVersion(slug, versions));\n  const docs = getDocsVersion(allDocs, getCurrentVersion(slug, versions));\n  const handleVersionChange = useCallback(event => {\n    const newPath = slug.replace(selectedVersion, event.target.value);\n    setSelectedVersion(event.target.value);\n    navigate(newPath);\n  }, [selectedVersion, slug]);\n  return React.createElement(Layout, {\n    data: data,\n    location: location,\n    menu: pageContext.menu\n  }, React.createElement(\"article\", {\n    className: \"page-main content\"\n  }, React.createElement(\"h3\", null, siteTitle)), React.createElement(\"article\", {\n    className: \"page-main content documentation-main\"\n  }, React.createElement(\"nav\", {\n    className: \"nav documentation-nav\"\n  }, React.createElement(\"h4\", null, \"Documentation\"), React.createElement(Box, {\n    sx: {\n      mt: 3\n    }\n  }, React.createElement(VersionSelect, {\n    versions: versions,\n    selectedVersion: selectedVersion,\n    onChange: handleVersionChange\n  })), React.createElement(\"ul\", null, docs.map((node, i) => {\n    const current = location.pathname.includes(node.fields.slug);\n    const title = node.frontmatter.title;\n    return React.createElement(\"li\", {\n      key: i,\n      className: current ? 'current' : ''\n    }, React.createElement(Link, {\n      to: node.fields.slug\n    }, title), current && React.createElement(\"nav\", {\n      className: \"nav documentation-content-nav\"\n    }, React.createElement(\"ul\", null, toc && toc.map((item, j) => React.createElement(\"li\", {\n      key: `link-${j}`\n    }, React.createElement(Link, {\n      to: item.url\n    }, item.title))))));\n  }))), React.createElement(\"div\", {\n    className: \"documentation-content\"\n  }, React.createElement(\"header\", null, React.createElement(\"h2\", null, pageTitle)), children)));\n};\nDocumentationTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocumentationTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data, pageContext}) => {\n  const title = `${pageContext.frontmatter.title} | ${data.site.siteMetadata.title}`;\n  return React.createElement(PageHead, {\n    title: title\n  }, React.createElement(\"meta\", {\n    name: \"description\",\n    content: pageContext.description\n  }));\n};\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    site {\n      ...SiteMetadata\n    }\n    allDirectory(filter: { relativeDirectory: { eq: \"documentation\" } }) {\n      ...AllDocDirectories\n    }\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n      tableOfContents\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/documentation//\" } } }\n      sort: [{ frontmatter: { order: ASC } }]\n    ) {\n      ...MdxTableOfContents\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","DocumentationTemplate","_ref","_data$site","_data$site$siteMetada","children","data","pageContext","location","allDocs","allMdx","nodes","toc","mdx","tableOfContents","items","pageTitle","frontmatter","title","slug","fields","siteTitle","site","siteMetadata","versions","useMemo","allDirectory","reverse","map","node","base","selectedVersion","setSelectedVersion","useState","getCurrentVersion","docs","getDocsVersion","handleVersionChange","useCallback","event","newPath","replace","target","value","navigate","Layout","menu","className","Box","sx","mt","VersionSelect","onChange","i","current","pathname","includes","key","Link","to","item","j","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","PageHead","name","content","description"],"sourceRoot":""}